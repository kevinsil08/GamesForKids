* {
    box-sizing: border-box
}

#p-container {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;

}

#game-board {
    display: grid;
    grid-template-columns: repeat(var(--grid-col-size), var(--cell_size));
    grid-template-rows: repeat(var(--grid-row-size), var(--cell_size));
    background-color: #CCC;
    gap: var(--cell-gap);
    font-size: 7vmin;
    border: 1vmin;
    padding: var(--cell-gap);
    position: relative;
    border-radius: 1vmin;
}

.cell {
    background-color: #AAA;
    border-radius: 1vmin;
    display: flex;
    justify-content: center;
    align-items: center;

}

.cell-initial {
    background-color: #d24d57;
    border-radius: 1vmin;
    display: flex;
    justify-content: center;
    align-items: center;
}

.cell-final {
    background-color: #448c74;
    border-radius: 1vmin;
    display: flex;
    justify-content: center;
    align-items: center;
}

.cell-path {
    background-color: rgb(34, 49, 63);
    border-radius: 1vmin;
    display: flex;
    justify-content: center;
    align-items: center;
}

.hidden {
    display: none;
}

.carTile {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--cell_size);
    height: var(--cell_size);
    border-radius: 1vmin;
    top: calc(var(--y) * (var(--cell_size) + var(--cell-gap)) + var(--cell-gap));
    left: calc(var(--x) * (var(--cell_size) + var(--cell-gap)) + var(--cell-gap));
    animation: show 2s ease-in-out;
    transition: 300ms ease-in;
}

@keyframes show {
    0% {
        opacity: .5;
        transform: scale(0);
    }
}

.btnContainer{
    align-items: center;
    justify-content: space-around;
    padding-top: 1vmin;
    animation: show 500ms ease-in-out;
}


.btn-Green {
    background: #35B26F;
    border: none;
    text-transform: uppercase;
    font-size: 20px;
    color: white;
    border-radius: 7px;
    box-shadow: 0 5px 0px #008A60;
    transition: all .2s;
    position: relative;
    padding: 1.5rem 6rem;
    position: relative;
    top: 0;
    cursor: pointer;
    margin:0 20px;
    font-family: 'Fuzzy Bubbles', sans-serif;
    animation: show 800ms ease-in-out;
    
  }

  #errorListen {
    color: #3D7553; 
    opacity: 1;
    animation: showError 1s ease-in-out;
  }

 @keyframes showError {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
} 


  .btn-Blue {
    background: #007E9B;
    border: none;
    text-transform: uppercase;
    font-size: 20px;
    color: white;
    border-radius: 7px;
    box-shadow: 0 5px 0px #005C82;
    transition: all .2s;
    position: relative;
    padding: 1.5rem 6rem;
    position: relative;
    top: 0;
    cursor: pointer;
    margin:0 1vmin;
    font-family: 'Fuzzy Bubbles', sans-serif;
    animation: show 800ms ease-in-out;
    
  }
  

  
  .btn-Green:active {
    top: 3px;
    box-shadow: 0 1px 0px #008A60;
    transition: all .2s;
  }

  .img-rotate{
    transform:rotate(0);  
    transition:all 1s;
  }


  /* css modal */
  .modal {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 0.4rem;
  width: 450px;
  padding: 1.3rem;
  min-height: 250px;
  position: absolute;
  top: 40%;
  background-color: white;
  border: 1px solid #ddd;
  border-radius: 15px;
}

.modal .flex {
  display: flex;
  align-items: center;
  justify-content: space-between;
}



.modal p {
  font-size: 0.9rem;
  color: #777;
  margin: 0.4rem 0 0.2rem;
}

.overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(3px);
  z-index: 1;
}

.modal {
  z-index: 2;
}

 .shake {
  animation: shake 0.5s;
  animation-iteration-count: 2;
}

@keyframes shake {
  0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-1deg); }
  20% { transform: translate(-3px, 0px) rotate(1deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(1deg); }
  50% { transform: translate(-1px, 2px) rotate(-1deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-1deg); }
  80% { transform: translate(-1px, -1px) rotate(1deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  100% { transform: translate(1px, -2px) rotate(-1deg); }
}